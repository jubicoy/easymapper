/*
 * This file is generated by jOOQ.
 */
package fi.jubic.easymapper.jooqtest.chatroom.db.tables.daos;


import fi.jubic.easymapper.jooqtest.chatroom.db.tables.ChatUser;
import fi.jubic.easymapper.jooqtest.chatroom.db.tables.records.ChatUserRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChatUserDao extends DAOImpl<ChatUserRecord, fi.jubic.easymapper.jooqtest.chatroom.db.tables.pojos.ChatUser, Integer> {

    /**
     * Create a new ChatUserDao without any configuration
     */
    public ChatUserDao() {
        super(ChatUser.CHAT_USER, fi.jubic.easymapper.jooqtest.chatroom.db.tables.pojos.ChatUser.class);
    }

    /**
     * Create a new ChatUserDao with an attached configuration
     */
    public ChatUserDao(Configuration configuration) {
        super(ChatUser.CHAT_USER, fi.jubic.easymapper.jooqtest.chatroom.db.tables.pojos.ChatUser.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(fi.jubic.easymapper.jooqtest.chatroom.db.tables.pojos.ChatUser object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<fi.jubic.easymapper.jooqtest.chatroom.db.tables.pojos.ChatUser> fetchById(Integer... values) {
        return fetch(ChatUser.CHAT_USER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public fi.jubic.easymapper.jooqtest.chatroom.db.tables.pojos.ChatUser fetchOneById(Integer value) {
        return fetchOne(ChatUser.CHAT_USER.ID, value);
    }

    /**
     * Fetch records that have <code>ROLE IN (values)</code>
     */
    public List<fi.jubic.easymapper.jooqtest.chatroom.db.tables.pojos.ChatUser> fetchByRole(String... values) {
        return fetch(ChatUser.CHAT_USER.ROLE, values);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<fi.jubic.easymapper.jooqtest.chatroom.db.tables.pojos.ChatUser> fetchByName(String... values) {
        return fetch(ChatUser.CHAT_USER.NAME, values);
    }

    /**
     * Fetch records that have <code>DELETED IN (values)</code>
     */
    public List<fi.jubic.easymapper.jooqtest.chatroom.db.tables.pojos.ChatUser> fetchByDeleted(Boolean... values) {
        return fetch(ChatUser.CHAT_USER.DELETED, values);
    }
}
