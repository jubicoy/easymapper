/*
 * This file is generated by jOOQ.
 */
package fi.jubic.easymapper.jooqtest.chatroom.db.tables.daos;


import fi.jubic.easymapper.jooqtest.chatroom.db.tables.Message;
import fi.jubic.easymapper.jooqtest.chatroom.db.tables.records.MessageRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessageDao extends DAOImpl<MessageRecord, fi.jubic.easymapper.jooqtest.chatroom.db.tables.pojos.Message, Integer> {

    /**
     * Create a new MessageDao without any configuration
     */
    public MessageDao() {
        super(Message.MESSAGE, fi.jubic.easymapper.jooqtest.chatroom.db.tables.pojos.Message.class);
    }

    /**
     * Create a new MessageDao with an attached configuration
     */
    public MessageDao(Configuration configuration) {
        super(Message.MESSAGE, fi.jubic.easymapper.jooqtest.chatroom.db.tables.pojos.Message.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(fi.jubic.easymapper.jooqtest.chatroom.db.tables.pojos.Message object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<fi.jubic.easymapper.jooqtest.chatroom.db.tables.pojos.Message> fetchById(Integer... values) {
        return fetch(Message.MESSAGE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public fi.jubic.easymapper.jooqtest.chatroom.db.tables.pojos.Message fetchOneById(Integer value) {
        return fetchOne(Message.MESSAGE.ID, value);
    }

    /**
     * Fetch records that have <code>TEXT IN (values)</code>
     */
    public List<fi.jubic.easymapper.jooqtest.chatroom.db.tables.pojos.Message> fetchByText(String... values) {
        return fetch(Message.MESSAGE.TEXT, values);
    }

    /**
     * Fetch records that have <code>AUTHOR_ID IN (values)</code>
     */
    public List<fi.jubic.easymapper.jooqtest.chatroom.db.tables.pojos.Message> fetchByAuthorId(Integer... values) {
        return fetch(Message.MESSAGE.AUTHOR_ID, values);
    }

    /**
     * Fetch records that have <code>ROOM_ID IN (values)</code>
     */
    public List<fi.jubic.easymapper.jooqtest.chatroom.db.tables.pojos.Message> fetchByRoomId(Integer... values) {
        return fetch(Message.MESSAGE.ROOM_ID, values);
    }
}
