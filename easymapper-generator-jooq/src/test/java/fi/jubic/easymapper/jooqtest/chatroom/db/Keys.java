/*
 * This file is generated by jOOQ.
 */
package fi.jubic.easymapper.jooqtest.chatroom.db;


import fi.jubic.easymapper.jooqtest.chatroom.db.tables.ChatUser;
import fi.jubic.easymapper.jooqtest.chatroom.db.tables.Message;
import fi.jubic.easymapper.jooqtest.chatroom.db.tables.Room;
import fi.jubic.easymapper.jooqtest.chatroom.db.tables.RoomMembership;
import fi.jubic.easymapper.jooqtest.chatroom.db.tables.records.ChatUserRecord;
import fi.jubic.easymapper.jooqtest.chatroom.db.tables.records.MessageRecord;
import fi.jubic.easymapper.jooqtest.chatroom.db.tables.records.RoomMembershipRecord;
import fi.jubic.easymapper.jooqtest.chatroom.db.tables.records.RoomRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * CHAT_SAMPLE.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ChatUserRecord> CONSTRAINT_8 = Internal.createUniqueKey(ChatUser.CHAT_USER, DSL.name("CONSTRAINT_8"), new TableField[] { ChatUser.CHAT_USER.ID }, true);
    public static final UniqueKey<MessageRecord> CONSTRAINT_6 = Internal.createUniqueKey(Message.MESSAGE, DSL.name("CONSTRAINT_6"), new TableField[] { Message.MESSAGE.ID }, true);
    public static final UniqueKey<RoomRecord> CONSTRAINT_2 = Internal.createUniqueKey(Room.ROOM, DSL.name("CONSTRAINT_2"), new TableField[] { Room.ROOM.ID }, true);
    public static final UniqueKey<RoomMembershipRecord> CONSTRAINT_7 = Internal.createUniqueKey(RoomMembership.ROOM_MEMBERSHIP, DSL.name("CONSTRAINT_7"), new TableField[] { RoomMembership.ROOM_MEMBERSHIP.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<MessageRecord, ChatUserRecord> CONSTRAINT_63 = Internal.createForeignKey(Message.MESSAGE, DSL.name("CONSTRAINT_63"), new TableField[] { Message.MESSAGE.AUTHOR_ID }, Keys.CONSTRAINT_8, new TableField[] { ChatUser.CHAT_USER.ID }, true);
    public static final ForeignKey<MessageRecord, RoomRecord> CONSTRAINT_63B = Internal.createForeignKey(Message.MESSAGE, DSL.name("CONSTRAINT_63B"), new TableField[] { Message.MESSAGE.ROOM_ID }, Keys.CONSTRAINT_2, new TableField[] { Room.ROOM.ID }, true);
    public static final ForeignKey<RoomRecord, ChatUserRecord> CONSTRAINT_26 = Internal.createForeignKey(Room.ROOM, DSL.name("CONSTRAINT_26"), new TableField[] { Room.ROOM.ADMINISTRATOR_ID }, Keys.CONSTRAINT_8, new TableField[] { ChatUser.CHAT_USER.ID }, true);
    public static final ForeignKey<RoomRecord, ChatUserRecord> CONSTRAINT_267 = Internal.createForeignKey(Room.ROOM, DSL.name("CONSTRAINT_267"), new TableField[] { Room.ROOM.CREATED_BY_ID }, Keys.CONSTRAINT_8, new TableField[] { ChatUser.CHAT_USER.ID }, true);
    public static final ForeignKey<RoomMembershipRecord, RoomRecord> CONSTRAINT_74 = Internal.createForeignKey(RoomMembership.ROOM_MEMBERSHIP, DSL.name("CONSTRAINT_74"), new TableField[] { RoomMembership.ROOM_MEMBERSHIP.ROOM_ID }, Keys.CONSTRAINT_2, new TableField[] { Room.ROOM.ID }, true);
    public static final ForeignKey<RoomMembershipRecord, ChatUserRecord> CONSTRAINT_747 = Internal.createForeignKey(RoomMembership.ROOM_MEMBERSHIP, DSL.name("CONSTRAINT_747"), new TableField[] { RoomMembership.ROOM_MEMBERSHIP.USER_ID }, Keys.CONSTRAINT_8, new TableField[] { ChatUser.CHAT_USER.ID }, true);
}
